<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!--
  自动扫描指定包下面的类，使标注为 @Controler 注释的类，变成处理请求的控制器，即自动具有参数绑定、映射等功能。
  -->

    <!--参考 springside4-->
    <!-- 自动扫描且只扫描 @Controller 注释的类-->
    <!-- use-default-filters="false"  这句必须有，否则无法在 web 应用下开启事务-->
    <context:component-scan base-package="org.h819.web,org.examples" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--spring mcv json 处理， 默认 jackson，在 pom 中需要 在 pom 文件中引入
   <dependency>
       <groupId>com.fasterxml.jackson.core</groupId>
       <artifactId>jackson-databind</artifactId>
       <version>${jackson.version}</version>
   </dependency>
   <dependency>
       <groupId>com.fasterxml.jackson.module</groupId>
       <artifactId>jackson-module-jaxb-annotations</artifactId>
       <version>${jackson.version}</version>
   </dependency>

参考自 springside4 -->

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- spring mvc 返回 json 数据时，默认用 jackson ，换为 fastjson。 Jackson在处理对象之间的循环嵌套关系时不便
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>WriteMapNullValue</value>
                        <value>QuoteFieldNames</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    -->

    <!--
    Spring 3.2 及以上版本自动开启检测URL后缀,设置Response content-type功能, 如果不手动关闭这个功能,当url后缀与accept头不一致时,
    Response的content-type将会和request的accept不一致,导致报 406 错误
    例如返回类型为JSON的@ResponseBody API, 必须将请求URL后缀改为.json，以便和 accept头(application/json)相匹配，否则返回 406 错误。
    关闭URL后缀检测的方法如下
    加入 contentNegotiationManager bean，并在    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager"> 中声明
    -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="favorParameter" value="false"/>
    </bean>

    <!-- 定义JSP文件的位置 -->
    <!-- 配置视图解析器（有多种），将ModelAndView及字符串解析为具体的页面 -->

    <!-- 视图解析器 InternalResourceViewResolver，通过为试图逻辑名添加前后缀的方式坚信解析 -->
    <!-- 如： 逻辑试图名 "login" 将解析为" /WEB-INF/jsp/login.jsp" 视图解析器 InternalResourceViewResolver，通过为试图逻辑名添加前后缀的方式坚信解析 -->

    <!-- 定义JSP文件的位置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- don't handle the static resource -->
    <mvc:default-servlet-handler/>

    <!--spring mvc 上传文件，必须配置-->
    <bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--上传文件大小限制为 10M-->
        <property name="maxUploadSize" value="102400000"></property>
        <!--临时文件夹，上传完成后，临时文件自动删除 10M-->
        <property name="uploadTempDir" value="upload/temp"></property>
        <!--请求编码，默认为 iso-8859-1 . 应该和jsp页面的 pageEncoding 保持一致-->
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!-- 定义无需Controller的url<->view直接映射
    <mvc:view-controller path="/" view-companyInfo="redirect:/task"/>
    -->
    <!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Throwable">error/500</prop>
                <!--  和上文配置有关，表示 /WEB-INF/jsp/error/500.jsp-->
            </props>
        </property>
    </bean>

</beans>