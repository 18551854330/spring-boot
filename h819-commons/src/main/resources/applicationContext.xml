<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"

       xsi:schemaLocation="http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-4.0.xsd


       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"

       default-lazy-init="true">


    <description>Spring 模版配置，其他项目在此基础上修改，参考 Spring side4，做了修改，不要照搬</description>

    <!--
     <import resource="applicationContext-tasks.xml"></import>
     -->

    <import resource="applicationContext-jpa.xml"></import>

    <!--
使用 annotation 自动注册 bean,并检查 @Required,@Autowired 的属性已被注入
排除了 @Controller 和 @ControllerAdvice 标记的两种 class，这两种 class 不被注入，所以在非 web 容器上下文中，@Autowired 方式不能初始化。
这两个类的在 spring-mvc-dispatcher-servlet.xml 中进行了加载。

在spring mvc 应用中，有两个上下文：spring context(applicationContext.xml) 和 DispatcherServlet context(spring-mvc-dispatcher-servlet.xml)，后者是 web 容器的上下文，而 spring 上下文在 web 容器上下文之上。
启动容器的时候，DispatcherServlet context 首先扫描加载 bean ，此时 spring context 就不在加载该 bean，所以加在 @Controller 中的 @Transactional 是不起作用的。
spring @Transactional 需要通过 spring context 加载。

这样设置之后，事物 @Transactional 统一加在  @service 层，@Controller 中不起作用。

-->
    <context:component-scan base-package="org.examples">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>


    <!-- JSR303 Validator定义 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
    <!-- JPA 配置结束 -->


</beans>